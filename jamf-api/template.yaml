AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Jamf Pro endpoints for Community Patch

Parameters:

  DomainName:
    Type: AWS::SSM::Parameter::Value<String>

  HostedZoneId:
    Type: AWS::SSM::Parameter::Value<String>

  RegionalCertificateArn:
    Type: AWS::SSM::Parameter::Value<String>

  TitlesBucketName:
    Type: AWS::SSM::Parameter::Value<String>

  TitlesTableName:
    Type: AWS::SSM::Parameter::Value<String>

# SAM Globals

Globals:
  Function:
    Runtime: python3.7
    Handler: index.lambda_handler
    Tracing: PassThrough
    Environment:
      Variables:
        TITLES_BUCKET: !Ref TitlesBucketName
        TITLES_TABLE: !Ref TitlesTableName

Resources:

# API Gateway

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      EndpointConfiguration: REGIONAL
      TracingEnabled: true

  ApiCustomDomain:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: !Sub 'jamf.${DomainName}'
      RegionalCertificateArn: !Ref RegionalCertificateArn
      EndpointConfiguration:
        Types:
          - REGIONAL

  ApiBasePath:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !Ref ApiCustomDomain
      RestApiId: !Ref ApiGateway
      Stage: Prod
    DependsOn:
      - ApiGateway
      - ApiGatewayProdStage
      - ApiCustomDomain

  RegionalRoute53Record:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Sub 'jamf.${DomainName}'
      SetIdentifier: !Sub 'jamf-api-${AWS::Region}'
      AliasTarget:
        DNSName: !GetAtt ApiCustomDomain.RegionalDomainName
        HostedZoneId: !GetAtt ApiCustomDomain.RegionalHostedZoneId
      HostedZoneId: !Ref HostedZoneId
      Region: !Ref AWS::Region
      Type: A

# Lambda

  GetSoftware:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/get_software
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref TitlesTableName
      Events:
        GetAllSoftware:
          Type: Api
          Properties:
            Path: /v1/{contributor}/software
            Method: get
            RestApiId:
                Ref: ApiGateway
        GetSelectSoftware:
          Type: Api
          Properties:
            Path: /v1/{contributor}/software/{titles}
            Method: get
            RestApiId:
                Ref: ApiGateway

  GetPatch:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/get_patch
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref TitlesBucketName
      Events:
        GetPatch:
          Type: Api
          Properties:
            Path: /v1/{contributor}/patch/{title}
            Method: get
            RestApiId:
                Ref: ApiGateway
