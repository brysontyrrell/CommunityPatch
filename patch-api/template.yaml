AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Jamf Pro endpoints for Community Patch

Parameters:

  DomainName:
    Type: AWS::SSM::Parameter::Value<String>

  HostedZoneId:
    Type: AWS::SSM::Parameter::Value<String>

  RegionalCertificateArn:
    Type: AWS::SSM::Parameter::Value<String>

  TitlesBucketName:
    Type: AWS::SSM::Parameter::Value<String>

  TitlesTableName:
    Type: AWS::SSM::Parameter::Value<String>

# SAM Globals

Globals:
  Function:
    Runtime: python3.7
    Handler: index.lambda_handler
    Tracing: PassThrough
    Environment:
      Variables:
        TITLES_BUCKET: !Ref TitlesBucketName
        TITLES_TABLE: !Ref TitlesTableName

Resources:

# API Gateway

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
#      Domain:
#        DomainName: !Sub 'api.${DomainName}'
#        CertificateArn: !Ref RegionalCertificateArn

  ApiCustomDomain:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: !Sub 'api.${DomainName}'
      RegionalCertificateArn: !Ref RegionalCertificateArn
      EndpointConfiguration:
        Types:
          - REGIONAL

  ApiBasePath:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !Ref ApiCustomDomain
      RestApiId: !Ref ApiGateway
      Stage: Prod
    DependsOn:
      - ApiGateway
      - ApiGatewayProdStage
      - ApiCustomDomain

  RegionalRoute53Record:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Sub 'api.${DomainName}'
      SetIdentifier: !Sub 'patch-api-${AWS::Region}'
      AliasTarget:
        DNSName: !GetAtt ApiCustomDomain.RegionalDomainName
        HostedZoneId: !GetAtt ApiCustomDomain.RegionalHostedZoneId
      HostedZoneId: !Ref HostedZoneId
      Region: !Ref AWS::Region
      Type: A

# Lambda

  PostTitle:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/post_title
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TitlesTableName
        - S3CrudPolicy:
            BucketName: !Ref TitlesBucketName
      Events:
        CreateTitle:
          Type: Api
          Properties:
            Path: /v1/titles
            Method: post
            RestApiId:
                Ref: ApiGateway

  PostDeleteVersion:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/post_delete_version
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TitlesTableName
        - S3CrudPolicy:
            BucketName: !Ref TitlesBucketName
      Events:
        AddVersion:
          Type: Api
          Properties:
            Path: /api/v1/titles/{title}/versions
            Method: post
            RestApiId:
              Ref: ApiGateway
        DeleteVersion:
          Type: Api
          Properties:
            Path: /api/v1/titles/{title}/versions/{version}
            Method: delete
            RestApiId:
              Ref: ApiGateway

  DeleteTitle:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/delete_title
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TitlesTableName
        - S3CrudPolicy:
            BucketName: !Ref TitlesBucketName
      Events:
        DeleteTitle:
          Type: Api
          Properties:
            Path: /api/v1/titles/{title}
            Method: delete
            RestApiId:
              Ref: ApiGateway

