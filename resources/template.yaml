AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Regional setup and pre-requisites for a Community Patch region

Parameters:

  Namespace:
    Type: String

  DomainName:
    Type: String

  HostedZoneId:
    Type: String

Conditions:
  UsEast2Only: !Equals [ !Ref AWS::Region, 'us-east-2' ]

# SAM Globals

Globals:
  Function:
    Runtime: python3.7
    Handler: index.lambda_handler
    Tracing: PassThrough
    Environment:
      Variables:
        NAMESPACE: !Ref Namespace

Resources:

# S3 Buckets

  TitlesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub communitypatch-${Namespace}-${AWS::Region}-titles

# SNS Topics

  EmailServiceTopic:
    Type: AWS::SNS::Topic

# Lambda

  TitleSyncService:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/title_sync_service
      MemorySize: 512
      Timeout: 10
      Tracing: Active
      Policies:
        - S3CrudPolicy:
            BucketName: !Sub communitypatch-${Namespace}-*-titles
      Events:
        S3Event:
          Type: S3
          Properties:
            Bucket: !Ref TitlesBucket
            Events:
              - s3:ObjectCreated:Put
              - s3:ObjectCreated:Post
              - s3:ObjectRemoved:Delete
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: titles

  ContributorStream:
    Type: AWS::Serverless::Function
    Condition: UsEast2Only
    Properties:
      CodeUri: ./src/contributor_stream
      Timeout: 10
      Tracing: Active
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt EmailServiceTopic.TopicName
        - Statement:
            - Effect: Allow
              Action: ssm:GetParameter*
              Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/communitypatch/${Namespace}/*
      Environment:
        Variables:
          DOMAIN_NAME: !Ref DomainName
          EMAIL_SERVICE_TOPIC: !Ref EmailServiceTopic
      Events:
        Contributors:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt ContributorsTable.StreamArn
            StartingPosition: TRIM_HORIZON
            BatchSize: 10
#            MaximumBatchingWindowInSeconds: 60

  EmailService:
    Type: AWS::Serverless::Function
    Condition: UsEast2Only
    Properties:
      CodeUri: ./src/email_service
      Timeout: 10
      Policies:
        Statement:
          - Effect: Allow
            Action: ses:SendEmail
            Resource: '*'
            Condition:
              StringEquals:
                ses:FromAddress: !Sub 'noreply@${DomainName}'
      Events:
        SnsTopic:
          Type: SNS
          Properties:
            Topic: !Ref EmailServiceTopic

# DynamoDB Tables

  ContributorsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub CommunityPatch-${Namespace}-Contributors-v1
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 4
        WriteCapacityUnits: 4

      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S

      KeySchema:
        - AttributeName: id
          KeyType: HASH

      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  RevokedTokensTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub CommunityPatch-${Namespace}-RevokedTokens-v1
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 4
        WriteCapacityUnits: 4

      AttributeDefinitions:
        - AttributeName: token_id
          AttributeType: S

      KeySchema:
        - AttributeName: token_id
          KeyType: HASH

      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  TitlesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub CommunityPatch-${Namespace}-Titles-v1
      BillingMode: PAY_PER_REQUEST

      AttributeDefinitions:
        - AttributeName: contributor_id
          AttributeType: S
        - AttributeName: title_id
          AttributeType: S

      KeySchema:
        - AttributeName: contributor_id
          KeyType: HASH
        - AttributeName: title_id
          KeyType: RANGE

      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

# SSM Parameter Store

  PublishDomainName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /communitypatch/${Namespace}/domain_name
      Type: String
      Value: !Ref DomainName

  PublishHostedZoneId:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /communitypatch/${Namespace}/hosted_zone_id
      Type: String
      Value: !Ref HostedZoneId

  PublishTitlesBucketName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /communitypatch/${Namespace}/titles_bucket_name
      Type: String
      Value: !Ref TitlesBucket

  PublishEmailServiceTopicArn:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /communitypatch/${Namespace}/email_service_topic_arn
      Type: String
      Value: !Ref EmailServiceTopic

  PublishContributorsTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /communitypatch/${Namespace}/contributors_table_name
      Type: String
      Value: !Ref ContributorsTable

  PublishRevokedTokensTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /communitypatch/${Namespace}/revoked_tokens_table_name
      Type: String
      Value: !Ref RevokedTokensTable

  PublishTitlesTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /communitypatch/${Namespace}/titles_table_name
      Type: String
      Value: !Ref TitlesTable
